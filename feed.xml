<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://rishihazra.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://rishihazra.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-05-26T20:30:32+00:00</updated><id>https://rishihazra.github.io/feed.xml</id><title type="html">blank</title><entry><title type="html">Why LLMs are required for Planning?</title><link href="https://rishihazra.github.io/llm-planning/2024/05/26/llms_as_planners_1.html" rel="alternate" type="text/html" title="Why LLMs are required for Planning?"/><published>2024-05-26T15:06:00+00:00</published><updated>2024-05-26T15:06:00+00:00</updated><id>https://rishihazra.github.io/llm-planning/2024/05/26/llms_as_planners_1</id><content type="html" xml:base="https://rishihazra.github.io/llm-planning/2024/05/26/llms_as_planners_1.html"><![CDATA[<p>In my talks, I often encounter a couple of recurring questions. The first is <strong>Why</strong> do I use LLMs as Planners in my works? Is it simply because they’re the latest rage. Let’s be clear – if you can do something with classical planners – <strong>don’t</strong> use a trillion parameter model for the same? That’d be like throwing a kitchen sink at it. However, as we will see, not everything can be <em>simply</em> solved using a classical planner.</p> <p>Once we tackle that, the inevitable follow-up question arises <strong>Are they all you need for planning</strong>?</p> <p>These are common questions, and many of us don’t have clear answers. Through this blog post, I aim to shed light on these inquiries. To kick things off, let’s clearly outline the key questions we’ll explore:</p> <p><strong>Q1. Why are LLMs useful for planning?</strong> Why consider LLMs over classical methods? We’ll dive into the flexibility and dynamic problem-solving capabilities of LLMs, illustrating how they adapt to new and unforeseen challenges in planning.</p> <p><strong>Q2. Are they really All You Need <em>for planning</em>?</strong> Can LLMs meet all your planning needs, or do they have their limitations? We’ll critically assess the strengths and potential drawbacks of relying solely on LLMs for planning tasks.</p> <hr/> <h2 id="q1-why-are-llms-useful-for-planning">Q1. Why are LLMs useful for planning?<br/><br/></h2> <h3 id="1-open-world-planning">1. Open-world Planning<br/><br/></h3> <div class="row"> <div class="col-sm-12 mt-3 mt-md-0"> <img src="/assets/img/open-world-planning-1.png" width="70%" alt="Description of the image content" class="img-fluid rounded z-depth-1" style="display: block; margin: auto;" onerror="this.onerror=null; this.src='image-not-found.png';"/> </div> </div> <p><br/><br/></p> <p>Here’s a scenario: a robot is tasked to deliver a cup for a drink, but the cup is already occupied by tableware. If the robot can’t empty the cup itself, what’s it to do? Stuck with a predefined domain, a classical planner is restricted to the predefined objects (cups and glasses) it in its <a href="(https://planning.wiki/ref/pddl/domain)">domain file</a>.</p> <p>Enter the LLM planner, a true out-of-the-box thinker <a href="#1">[1]</a>. Drawing from its world knowledge, it might suggest, “How about a bowl?” As humans, we know a bowl can function much like a cup — in technical terms, they have similar <em>affordances</em>. <br/><br/></p> <div class="row"> <div class="col-sm-12 mt-3 mt-md-0"> <img src="/assets/img/open-world-planning-2.png" width="70%" alt="Description of the image content" class="img-fluid rounded z-depth-1" style="display: block; margin: auto;" onerror="this.onerror=null; this.src='image-not-found.png';"/> </div> </div> <p><br/><br/></p> <p>Take Voyager <a href="#2">[2]</a>, a lifelong learning agent in Minecraft, for example. It’s a lifelong learning agent in Minecraft which designs its own <em>curriculum</em>, builds a skill library and constantly expands it by interacting with the environment. Each skill is defined in form of executable code blocks and more complex skills are build by composing simpler skills. For e.g., to <code class="language-plaintext highlighter-rouge">combatZombie</code>, the agent needs to <code class="language-plaintext highlighter-rouge">craftStoneSword</code> and <code class="language-plaintext highlighter-rouge">craftShield</code>, which in turn requires skills like <code class="language-plaintext highlighter-rouge">mineWood</code> and <code class="language-plaintext highlighter-rouge">makeFurnace</code>. So how does it work? No rewards for guessing that the world knowledge of the LLMs come in handy. In contrast, predefining every possible skill and scenario in a classical planner would require extensive knowledge of both the domain and the environment. <br/><br/></p> <h3 id="2-handling-abstract-tasks">2. Handling Abstract Tasks<br/><br/></h3> <table> <tbody> <tr> <td align="center" valign="top" width="25%"> <video width="100%" controls=""> <source src="/assets/videos/organize_closet.mp4" type="video/mp4"/> Your browser does not support the video tag. </video> <br/><sub><b>Organize Closet</b></sub> </td> <td align="center" valign="top" width="25%"> <video width="100%" controls=""> <source src="/assets/videos/browse_internet.mp4" type="video/mp4"/> Your browser does not support the video tag. </video> <br/><sub><b>Browse Internet</b></sub> </td> <td align="center" valign="top" width="25%"> <video width="100%" controls=""> <source src="/assets/videos/turn_off_tv.mp4" type="video/mp4"/> Your browser does not support the video tag. </video> <br/><sub><b>Turn off TV</b></sub> </td> </tr> </tbody> </table> <p><br/><br/></p> <p>Furthermore, LLMs, the veritable know-it-alls, can instantly generate plans for just about any task you can think of, all in <em>zero-shot</em> <a href="#3">[3]</a>. Meanwhile, classical planning requires expertly formalized goal conditions in a <a href="https://planning.wiki/ref/pddl/problem">PDDL problem file</a>.<br/><br/></p> <h3 id="3-handling-partial-observability">3. Handling Partial Observability<br/><br/></h3> <div class="row"> <div class="col-sm-12 mt-3 mt-md-0"> <img src="/assets/img/partial-observability.png" width="70%" alt="Description of the image content" class="img-fluid rounded z-depth-1" style="display: block; margin: auto;" onerror="this.onerror=null; this.src='image-not-found.png';"/> </div> </div> <p><br/><br/></p> <p>Classical planners generally work under the assumption of <em>full observability</em> modeled via a Markov Decision Process (MDP). Unfortunately, in the real-world, the agent’s senors provide only partial information, called <em>observation</em>. Such problems are modeled as a Partially Observable MDP (POMDP). At each time step, the sequence of observations made by the agent determines a probability distribution over states of the environment. Such a distribution is called a <em>belief state</em>. Needless to say that often leads to intractibility problems as the length of the plan grows. LLMs can use its world knowledge to get handle partial observability. Think of it as a commonsense prior that helps to better (posterior) belief state. For instance, given the task <code class="language-plaintext highlighter-rouge">make an omlette</code>, the LLM can output actions to <code class="language-plaintext highlighter-rouge">go to the fridge</code> since eggs are likely to be found in the fridge – even though eggs are not visible (i.e. partial observation) <a href="#4">[4]</a>. <br/><br/></p> <div class="row"> <div class="col-sm-12 mt-3 mt-md-0"> <img src="/assets/img/partial-observability-2.png" width="70%" alt="Description of the image content" class="img-fluid rounded z-depth-1" style="display: block; margin: auto;" onerror="this.onerror=null; this.src='image-not-found.png';"/> </div> </div> <p><br/><br/></p> <p>Yet another example is where the agent is given the task of <code class="language-plaintext highlighter-rouge">stacking the lighter block on the heavier block</code><a href="#5">[5]</a>. Without the information of weights, a planner will never work. However, a LLM uses <em>active perception</em> to first pick up each block to register the weights, then perform the task. <br/><br/></p> <hr/> <h2 id="q2-are-they-really-all-you-need-for-planning">Q2. Are they really All You Need <em>for planning</em>?<br/><br/></h2> <h3 id="what-we-know-so-far">What we know so far?<br/><br/></h3> <table> <thead> <tr> <th style="text-align: left"> </th> <th style="text-align: center">Classical Planning</th> <th style="text-align: center">LLM Planning</th> </tr> </thead> <tbody> <tr> <td style="text-align: left"><strong>Open-world Planning</strong></td> <td style="text-align: center">❌</td> <td style="text-align: center">✅</td> </tr> <tr> <td style="text-align: left"><strong>Handling Abstract Tasks</strong></td> <td style="text-align: center">❌</td> <td style="text-align: center">✅</td> </tr> <tr> <td style="text-align: left"><strong>Handling Partial Observability</strong></td> <td style="text-align: center">❌</td> <td style="text-align: center">✅</td> </tr> </tbody> </table> <p><br/><br/> Note that these aspects are not outliers – on the contrary – these are pretty much the norm in the real-world. With LLMs checking all the boxes, it is tempting to declare, <strong>“An LLM is all you need for planning. Period.”</strong> <br/><br/></p> <div class="row"> <div class="col-sm-12 mt-3 mt-md-0"> <img src="/assets/img/well-well.png" width="50%" alt="Description of the image content" class="img-fluid rounded z-depth-1" style="display: block; margin: auto;" onerror="this.onerror=null; this.src='image-not-found.png';"/> </div> </div> <p><br/><br/></p> <p>But let’s hold that thought. The world of planning doesn’t end with these three aspects. Are LLMs the be-all and end-all for planning? Maybe not just yet. Let’s explore this further and keep our tech enthusiasm in check 😉. <br/><br/></p> <h3 id="llms-seem-to-struggle-a-bit-6">LLMs seem to struggle a bit <a href="#6">[6]</a>.<br/><br/></h3> <div class="row"> <div class="col-sm-12 col-md-6 offset-md-3 mt-3 mt-md-0"> <video class="img-fluid rounded z-depth-1" controls="" style="display: block; margin-left: auto; margin-right: auto;"> <source src="/assets/videos/say_final_hanoi.mp4" type="video/mp4"/> Your browser does not support the video tag. </video> </div> </div> <p><br/><br/></p> <h3 id="in-fact-it-struggles-a-lot-6">In fact, it struggles a lot <a href="#6">[6]</a>.<br/><br/></h3> <div class="row"> <div class="col-sm-12 col-md-6 offset-md-3 mt-3 mt-md-0"> <video class="img-fluid rounded z-depth-1" controls="" style="display: block; margin-left: auto; margin-right: auto;"> <source src="/assets/videos/say_final_virtualhome.mp4" type="video/mp4"/> Your browser does not support the video tag. </video> </div> </div> <p><br/><br/></p> <h3 id="even-on-simple-blocksworld-7">Even on simple Blocksworld <a href="#7">[7]</a>.<br/><br/></h3> <div align="center"> <div class="jekyll-twitter-plugin"><blockquote class="twitter-tweet"><p lang="en" dir="ltr">Forget Super Bowl, it is more fun to watch the all powerful ChatGPT (v. Jan 30) trying to &quot;plan&quot; a 3 blocks configuration.. <br/><br/>tldr; LLM&#39;s are multi-shot &quot;apologetic&quot; planners that would rather use you as their world model cum debugger.. <a href="https://t.co/eYIeEVBJli">pic.twitter.com/eYIeEVBJli</a></p>&mdash; Subbarao Kambhampati (కంభంపాటి సుబ్బారావు) (@rao2z) <a href="https://twitter.com/rao2z/status/1624881790212251649?ref_src=twsrc%5Etfw">February 12, 2023</a></blockquote> <script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script> </div> </div> <p><br/><br/></p> <h3 id="and-neither-prompting-nor-finetuning-helps-8">And neither Prompting, nor Finetuning helps <a href="#8">[8]</a>.<br/><br/></h3> <ul> <li>50 human planners</li> <li>39 (78%) came up with valid plan</li> <li>35 (70%) came up with optimal plan</li> <li><u>Finetuned GPT-3</u> could only solve 20% (122 out of 600)<br/><br/></li> </ul> <p>So what do we have now?<br/><br/></p> <table> <thead> <tr> <th style="text-align: left"> </th> <th style="text-align: center">Classical Planning</th> <th style="text-align: center">LLM Planning</th> </tr> </thead> <tbody> <tr> <td style="text-align: left"><strong>Open-world Planning</strong></td> <td style="text-align: center">❌</td> <td style="text-align: center">✅</td> </tr> <tr> <td style="text-align: left"><strong>Handling Abstract Tasks</strong></td> <td style="text-align: center">❌</td> <td style="text-align: center">✅</td> </tr> <tr> <td style="text-align: left"><strong>Handling Partial Observability</strong></td> <td style="text-align: center">❌</td> <td style="text-align: center">✅</td> </tr> <tr> <td style="text-align: left"><strong>Feasibility</strong></td> <td style="text-align: center">✅</td> <td style="text-align: center">❌</td> </tr> <tr> <td style="text-align: left"><strong>Optimality</strong></td> <td style="text-align: center">✅</td> <td style="text-align: center">❌</td> </tr> </tbody> </table> <p><br/><br/> LLMs are useful for planning. However, there are no formal guarantees.</p> <hr/> <h2 id="can-we-improve-it-to-have-some-formal-guarantees">Can we improve it to have <u>some</u> formal guarantees?</h2> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Yes
</code></pre></div></div> <hr/> <h2 id="references">References</h2> <p><a id="1">[1]</a> Ding, Y. (2023). Integrating action knowledge and LLMs for Task Planning and situation handling in open worlds. Autonomous Robots, 47, 981-997.</p> <p><a id="2">[2]</a> Wang, G. (2024). Voyager: An Open-Ended Embodied Agent with Large Language Models. Transactions on Machine Learning Research, 2835-8856.</p> <p><a id="3">[3]</a> Huang, W. (2022). Language Models as Zero-Shot Planners: Extracting Actionable Knowledge for Embodied Agents. Proceedings of the 39th International Conference on Machine Learning, PMLR 162:9118-9147.</p> <p><a id="4">[4]</a> Vemprala, S. (2023). ChatGPT for Robotics: Design Principles and Model Abilities.</p> <p><a id="5">[5]</a> Sun, L. (2023). Interactive Planning Using Large Language Models for Partially Observable Robotics Tasks.</p> <p><a id="6">[6]</a> Hazra, R. (2023). SayCanPay: Heuristic Planning with Large Language Models Using Learnable Domain Knowledge. Proceedings of the AAAI Conference on Artificial Intelligence, 20123–20133.</p> <p><a id="7">[7]</a> Valmeekam, K. (2023). PlanBench: An Extensible Benchmark for Evaluating Large Language Models on Planning and Reasoning about Change. NeurIPS 2023 Track on Datasets and Benchmarks.</p> <p><a id="8">[8]</a> Kambhampati, S. (2023). On the Role of Large Language Models in Planning. ICAPS 2023 Tutorial</p> <hr/> <h2 id="read-the-next-article-in-the-series">Read the next article in the series:</h2> <p><a href="https://rishihazra.github.io/llm-planning/2024/05/26/llms_as_planners_2.html">Fusing LLM and Classical Planning</a></p>]]></content><author><name></name></author><category term="llm-planning"/><category term="formatting"/><category term="citation"/><summary type="html"><![CDATA[In my talks, I often encounter a couple of recurring questions. The first is Why do I use LLMs as Planners in my works? Is it simply because they’re the latest rage. Let’s be clear – if you can do something with classical planners – don’t use a trillion parameter model for the same? That’d be like throwing a kitchen sink at it. However, as we will see, not everything can be simply solved using a classical planner.]]></summary></entry><entry><title type="html">Displaying External Posts on Your al-folio Blog</title><link href="https://rishihazra.github.io/2022/04/23/displaying-external-posts-on-your-al-folio-blog.html" rel="alternate" type="text/html" title="Displaying External Posts on Your al-folio Blog"/><published>2022-04-23T23:20:09+00:00</published><updated>2022-04-23T23:20:09+00:00</updated><id>https://rishihazra.github.io/2022/04/23/displaying-external-posts-on-your-al-folio-blog</id><content type="html" xml:base="https://rishihazra.github.io/2022/04/23/displaying-external-posts-on-your-al-folio-blog.html"><![CDATA[]]></content><author><name></name></author></entry></feed>